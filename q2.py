# -*- coding: utf-8 -*-
"""q2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uK6mlrDIrliAWzFD5R8FbrQDmfRih9Eh
"""

import math

def distance(p1, p2):
    return math.sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)

def total_distance(route):
    # Calculate the total distance (closed loop)
    d = sum(distance(route[i], route[i+1]) for i in range(len(route) - 1))
    return d + distance(route[-1], route[0])

def hill_climb(route):
    best = route[:]
    best_dist = total_distance(best)
    while True:
        improved = False
        for i in range(1, len(best)):
            for j in range(i + 1, len(best)):
                new_route = best[:]
                new_route[i], new_route[j] = new_route[j], new_route[i]
                new_dist = total_distance(new_route)
                if new_dist < best_dist:
                    best, best_dist = new_route, new_dist
                    improved = True
                    break
            if improved:
                break
        if not improved:
            break
    return best, best_dist

if __name__ == "__main__":
    points = [(0, 0), (1, 5), (5, 2), (6, 6), (2, 3)]
    route, dist = hill_climb(points)
    print("Optimized route:", route)
    print("Total distance:", dist)